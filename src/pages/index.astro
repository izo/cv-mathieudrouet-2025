---
import BaseLayout from '../layouts/BaseLayout.astro';
import ExperienceCard from '../components/ExperienceCard.astro';
import CVSection from '../components/cv/CVSection.astro';
import CVGrid from '../components/cv/CVGrid.astro';
import CVCard from '../components/cv/CVCard.astro';
import { getEntry } from 'astro:content';
import { siteConfig } from '../config/site.ts';
import { parseCVContent } from '../utils/cvParser.ts';

// Get CV content from Markdown
const cvEntry = await getEntry('cv', 'cv');
if (!cvEntry) {
  throw new Error('CV content not found');
}
const { title, description } = siteConfig;

// Parse structured data from Markdown content
const cvContent = parseCVContent(cvEntry.body, cvEntry.data);
---

<BaseLayout title={title} description={description} theme={cvEntry.data.theme}>
  <div class="pl-4 pr-4 sm:pl-6 sm:pr-6 lg:pl-page lg:pr-8 pt-6 sm:pt-8 pb-2 sm:pb-4">
    <header class="mb-section" role="banner">
      <h1 class="text-hero text-cv-accent font-semibold font-lora" id="main-title">{cvContent.name}</h1>
    </header>

    <CVGrid>
      <CVCard title="Education" id="education-section" icon={cvContent.educationIcon}>
        {cvContent.education.map((edu) => (
          <div>
            <span class="inline-flex items-center gap-1.5 px-2 py-1 text-xs sm:text-sm text-white border shadow-sm font-medium mb-2 font-ibm-plex-mono" style="background-color: #98b6b0; border-color: #98b6b0;">
              {edu.period}
            </span>
            <h4 class="text-sm text-cv-content mb-1 font-semibold font-lora">
              {edu.title}
            </h4>
            <p class="text-body text-cv-muted">{edu.institution}</p>
          </div>
        ))}
      </CVCard>

      <CVCard title="Coordonnées" id="contact-section" icon={cvContent.contactIcon}>
        <ul class="space-y-3">
          {cvContent.contactContent?.map((contactItem) => (
            <li class="text-body text-cv-content flex items-center">
              <span class="flex-1" set:html={contactItem}></span>
            </li>
          ))}
        </ul>
      </CVCard>

      <CVCard title="Centres d'intérêt" id="interests-section" icon={cvContent.interestsIcon}>
        <ul class="space-y-3">
          {cvContent.interests.map((interest) => (
            <li class="text-body text-cv-content flex items-center">
              <span class="flex-1" set:html={interest}></span>
            </li>
          ))}
        </ul>
      </CVCard>
    </CVGrid>

    <CVSection title="Expériences" subtitle="10+ ans" id="experience-section">
      {cvContent.experience.map((exp) => (
        <ExperienceCard
          company={exp.company}
          companyUrl={exp.companyUrl}
          role={exp.role}
          period={exp.period}
          current={exp.current}
          logo={exp.logo}
          icon={exp.icon}
        >
          {exp.achievements.map((achievement) => (
            <li class="text-body text-cv-content flex">
              <span set:html={achievement}></span>
            </li>
          ))}
        </ExperienceCard>
      ))}
    </CVSection>

    <CVSection title="Compétences" subtitle="Expertise professionnelle" id="skills-section">
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 gap-4 sm:gap-6 lg:gap-section">
        {cvContent.skills.map((skill) => (
          <ExperienceCard
            company={skill.title}
            role={skill.subtitle}
            period={skill.level}
            current={skill.current}
            icon={skill.icon}
            levelIcon={skill.levelIcon}
          >
            {skill.items.map((item) => (
              <li class="text-body text-cv-content flex">
                <span set:html={item}></span>
              </li>
            ))}
          </ExperienceCard>
        ))}
      </div>
    </CVSection>
  </div>   
</BaseLayout>
