---
import CVLayout from '../layouts/CVLayout.astro';
import ExperienceCard from '../components/ExperienceCard.astro';
import CVSection from '../components/cv/CVSection.astro';
import CVGrid from '../components/cv/CVGrid.astro';
import CVCard from '../components/cv/CVCard.astro';
import { getEntry } from 'astro:content';
import { siteConfig } from '../config/site.ts';
import { parseCVContent } from '../utils/cvParser.ts';

// Get CV content from Markdown
const cvEntry = await getEntry('cv', 'cv');
if (!cvEntry) {
  throw new Error('CV content not found');
}
const { title, description } = siteConfig;

// Parse structured data from Markdown content
const cvContent = parseCVContent(cvEntry.body, cvEntry.data);

// Get calendar icon SVG from Iconify API
const getCalendarIconSVG = async () => {
  try {
    const response = await fetch('https://api.iconify.design/carbon:calendar.svg?color=white&width=16&height=16');
    return await response.text();
  } catch {
    return '<svg width="16" height="16" viewBox="0 0 32 32" fill="white"><rect x="4" y="4" width="24" height="24" rx="2" ry="2"/></svg>';
  }
};

const calendarIconSVG = await getCalendarIconSVG();
---

<CVLayout title={title} description={description}>
  <div class="pl-4 pr-4 sm:pl-6 sm:pr-6 lg:pl-page lg:pr-8 pt-6 sm:pt-8 pb-2 sm:pb-4">
    <header class="mb-section" role="banner">
      <h1 class="text-hero text-cv-accent font-semibold font-lora" id="main-title">{cvContent.name}</h1>
    </header>

    <CVGrid>
      <CVCard title="Education" id="education-section" icon={cvContent.educationIcon}>
        {cvContent.education.map((edu) => (
          <div>
            <span class="inline-flex items-center gap-1.5 px-3 py-1 text-sm bg-cv-accent text-white border border-cv-accent shadow-sm hover:bg-cv-accent/80 transition-colors mb-2 font-ibm-plex-mono">
              <div class="flex-shrink-0" set:html={calendarIconSVG} />
              {edu.period}
            </span>
            <h4 class="text-sm text-cv-content mb-1 font-semibold font-lora">
              {edu.title}
            </h4>
            <p class="text-body text-cv-muted">{edu.institution}</p>
          </div>
        ))}
      </CVCard>

      <CVCard title="Coordonnées" id="contact-section" icon={cvContent.contactIcon}>
        <div class="space-y-3">
          <p class="text-body text-cv-muted">Email: <a href={`mailto:${cvContent.contact.email}`} class="text-cv-accent hover:underline">{cvContent.contact.email}</a></p>
          <p class="text-body text-cv-muted">Portfolio: <a href={cvContent.contact.portfolio.url} class="text-cv-accent hover:underline" target="_blank" rel="noopener noreferrer">{cvContent.contact.portfolio.text}</a></p>
          <p class="text-body text-cv-muted">LinkedIn: {cvContent.contact.linkedin}</p>
          <p class="text-body text-cv-muted">{cvContent.contact.location}</p>
        </div>
      </CVCard>

      <CVCard title="Centres d'intérêt" id="interests-section" icon={cvContent.interestsIcon}>
        <ul class="space-y-2">
          {cvContent.interests.map((interest) => (
            <li class="text-body text-cv-content flex items-center">
              <span class="mr-3 text-cv-accent">•</span>
              <span class="flex-1" set:html={interest}></span>
            </li>
          ))}
        </ul>
      </CVCard>
    </CVGrid>

    <CVSection title="Expérience" subtitle="10+ ans" id="experience-section">
      {cvContent.experience.map((exp) => (
        <ExperienceCard
          company={exp.company}
          companyUrl={exp.companyUrl}
          role={exp.role}
          period={exp.period}
          current={exp.current}
          logo={exp.logo}
        >
          {exp.achievements.map((achievement) => (
            <li class="text-body text-cv-content flex">
              <span class="mr-3">•</span>
              <span>{achievement}</span>
            </li>
          ))}
        </ExperienceCard>
      ))}
    </CVSection>

    <CVSection title="Compétences" subtitle="Expertise professionnelle" id="skills-section">
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 gap-4 sm:gap-6 lg:gap-section">
        {cvContent.skills.map((skill) => (
          <ExperienceCard
            company={skill.title}
            role={skill.subtitle}
            period={skill.level}
            current={skill.current}
            icon={skill.icon}
            levelIcon={skill.levelIcon}
          >
            {skill.items.map((item) => (
              <li class="text-body text-cv-content flex">
                <span class="mr-3">•</span>
                <span set:html={item}></span>
              </li>
            ))}
          </ExperienceCard>
        ))}
      </div>
    </CVSection>
  </div>   
</CVLayout>
