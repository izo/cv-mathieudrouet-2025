---
import type { AuditResult, AuditCategory, AuditCheck } from '../../utils/auditSystem';

export interface Props {
  auditResult: AuditResult;
  showDetails?: boolean;
}

const { auditResult, showDetails = false } = Astro.props;

// Helper function to get status color
const getStatusColor = (status: string) => {
  switch (status) {
    case 'excellent': return 'text-green-700 bg-green-100';
    case 'good': return 'text-blue-700 bg-blue-100';
    case 'warning': return 'text-yellow-700 bg-yellow-100';
    case 'critical': return 'text-red-700 bg-red-100';
    default: return 'text-gray-700 bg-gray-100';
  }
};

// Helper function to get grade color
const getGradeColor = (grade: string) => {
  if (grade.startsWith('A')) return 'text-green-600';
  if (grade.startsWith('B')) return 'text-blue-600';
  if (grade.startsWith('C')) return 'text-yellow-600';
  return 'text-red-600';
};

// Helper function to get check status icon
const getCheckIcon = (status: string) => {
  switch (status) {
    case 'pass': return '‚úÖ';
    case 'warning': return '‚ö†Ô∏è';
    case 'fail': return '‚ùå';
    default: return '‚ö™';
  }
};

// Helper function to get priority badge
const getPriorityBadge = (priority: string) => {
  switch (priority) {
    case 'high': return 'bg-red-100 text-red-800';
    case 'medium': return 'bg-yellow-100 text-yellow-800';
    case 'low': return 'bg-green-100 text-green-800';
    default: return 'bg-gray-100 text-gray-800';
  }
};

const auditDate = new Date(auditResult.timestamp).toLocaleDateString();
---

<div class="audit-dashboard bg-white shadow-lg rounded-lg p-6 max-w-6xl mx-auto">
  <!-- Header -->
  <div class="mb-8">
    <div class="flex justify-between items-center mb-4">
      <h1 class="text-3xl font-bold text-gray-900">
        üîç Audit Dashboard
      </h1>
      <div class="text-sm text-gray-500">
        {auditDate} ‚Ä¢ v{auditResult.version}
      </div>
    </div>
    
    <!-- Overall Score -->
    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6 mb-6">
      <div class="flex items-center justify-between">
        <div>
          <h2 class="text-lg font-semibold text-gray-900 mb-2">Overall Score</h2>
          <div class="flex items-center gap-4">
            <div class="text-4xl font-bold text-blue-600">
              {auditResult.overallScore}/100
            </div>
            <div class={`text-2xl font-bold ${getGradeColor(auditResult.overallGrade)}`}>
              {auditResult.overallGrade}
            </div>
          </div>
        </div>
        <div class="text-6xl">
          {auditResult.overallScore >= 90 ? 'üåü' : auditResult.overallScore >= 80 ? '‚ú®' : auditResult.overallScore >= 70 ? 'üëç' : '‚ö†Ô∏è'}
        </div>
      </div>
    </div>
  </div>

  <!-- Categories Grid -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
    {auditResult.categories.map((category) => (
      <div class="bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
        <div class="flex items-center justify-between mb-3">
          <h3 class="text-lg font-semibold text-gray-900">{category.name}</h3>
          <span class={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(category.status)}`}>
            {category.status}
          </span>
        </div>
        
        <div class="flex items-center gap-3 mb-3">
          <div class="text-2xl font-bold text-blue-600">
            {category.score}/100
          </div>
          <div class={`text-lg font-bold ${getGradeColor(category.grade)}`}>
            {category.grade}
          </div>
        </div>
        
        <p class="text-sm text-gray-600 mb-3">{category.summary}</p>
        
        <div class="flex items-center justify-between">
          <span class={`px-2 py-1 rounded text-xs font-medium ${getPriorityBadge(category.priority)}`}>
            {category.priority} priority
          </span>
          <div class="text-sm text-gray-500">
            {category.checks.length} checks
          </div>
        </div>
      </div>
    ))}
  </div>

  <!-- Detailed Results -->
  {showDetails && (
    <div class="space-y-6">
      <h2 class="text-2xl font-bold text-gray-900 mb-4">Detailed Analysis</h2>
      
      {auditResult.categories.map((category) => (
        <div class="bg-gray-50 rounded-lg p-6">
          <div class="flex items-center justify-between mb-4">
            <h3 class="text-xl font-semibold text-gray-900">{category.name}</h3>
            <div class="flex items-center gap-2">
              <span class={`text-lg font-bold ${getGradeColor(category.grade)}`}>
                {category.grade}
              </span>
              <span class="text-lg text-gray-600">
                ({category.score}/100)
              </span>
            </div>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            {category.checks.map((check) => (
              <div class="bg-white border border-gray-200 rounded-lg p-4">
                <div class="flex items-start justify-between mb-2">
                  <div class="flex items-center gap-2">
                    <span class="text-lg">{getCheckIcon(check.status)}</span>
                    <h4 class="font-semibold text-gray-900">{check.name}</h4>
                  </div>
                  <span class="text-sm font-medium text-gray-600">
                    {check.score}/100
                  </span>
                </div>
                
                <p class="text-sm text-gray-600 mb-2">{check.description}</p>
                <p class="text-xs text-gray-500 mb-2">{check.details}</p>
                
                {check.suggestion && (
                  <div class="bg-blue-50 border border-blue-200 rounded p-2 mt-2">
                    <p class="text-xs text-blue-800">
                      <strong>Suggestion:</strong> {check.suggestion}
                    </p>
                  </div>
                )}
                
                {check.file && (
                  <div class="mt-2 text-xs text-gray-500">
                    üìÅ {check.file}{check.line && `:${check.line}`}
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      ))}
    </div>
  )}

  <!-- Recommendations -->
  <div class="mt-8">
    <h2 class="text-2xl font-bold text-gray-900 mb-6">üéØ Recommendations</h2>
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      {auditResult.recommendations.map((recommendation) => (
        <div class="bg-white border border-gray-200 rounded-lg p-6">
          <div class="flex items-start justify-between mb-3">
            <h3 class="text-lg font-semibold text-gray-900">{recommendation.title}</h3>
            <span class={`px-2 py-1 rounded text-xs font-medium ${getPriorityBadge(recommendation.priority)}`}>
              {recommendation.priority}
            </span>
          </div>
          
          <p class="text-sm text-gray-600 mb-4">{recommendation.description}</p>
          
          <div class="grid grid-cols-3 gap-4 mb-4">
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-1">Impact</div>
              <div class="text-sm font-medium text-gray-900 capitalize">{recommendation.impact}</div>
            </div>
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-1">Effort</div>
              <div class="text-sm font-medium text-gray-900 capitalize">{recommendation.effort}</div>
            </div>
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-1">ROI</div>
              <div class="text-sm font-medium text-gray-900 capitalize">{recommendation.roi}</div>
            </div>
          </div>
          
          <div class="bg-gray-50 rounded p-3">
            <div class="text-xs text-gray-500 mb-1">Implementation</div>
            <div class="text-sm text-gray-700">{recommendation.implementation}</div>
          </div>
        </div>
      ))}
    </div>
  </div>

  <!-- Risk Assessment -->
  <div class="mt-8">
    <h2 class="text-2xl font-bold text-gray-900 mb-6">üõ°Ô∏è Risk Assessment</h2>
    
    <div class="bg-gray-50 rounded-lg p-6">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-xl font-semibold text-gray-900">Overall Risk Level</h3>
        <span class={`px-3 py-1 rounded-full text-sm font-medium ${
          auditResult.riskAssessment.overall === 'low' ? 'bg-green-100 text-green-800' :
          auditResult.riskAssessment.overall === 'medium' ? 'bg-yellow-100 text-yellow-800' :
          'bg-red-100 text-red-800'
        }`}>
          {auditResult.riskAssessment.overall.toUpperCase()}
        </span>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        {auditResult.riskAssessment.categories.map((risk) => (
          <div class="bg-white border border-gray-200 rounded-lg p-4">
            <div class="flex items-center justify-between mb-2">
              <h4 class="font-semibold text-gray-900">{risk.name}</h4>
              <span class={`px-2 py-1 rounded text-xs font-medium ${
                risk.level === 'low' ? 'bg-green-100 text-green-800' :
                risk.level === 'medium' ? 'bg-yellow-100 text-yellow-800' :
                'bg-red-100 text-red-800'
              }`}>
                {risk.level}
              </span>
            </div>
            <p class="text-sm text-gray-600 mb-2">{risk.description}</p>
            <div class="bg-blue-50 border border-blue-200 rounded p-2">
              <p class="text-xs text-blue-800">
                <strong>Mitigation:</strong> {risk.mitigation}
              </p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- Metrics -->
  <div class="mt-8">
    <h2 class="text-2xl font-bold text-gray-900 mb-6">üìä Metrics</h2>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <!-- Technical Metrics -->
      <div class="bg-white border border-gray-200 rounded-lg p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Technical</h3>
        <div class="space-y-3">
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">Lines of Code</span>
            <span class="text-sm font-medium">{auditResult.metrics.technical.linesOfCode.toLocaleString()}</span>
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">Components</span>
            <span class="text-sm font-medium">{auditResult.metrics.technical.components}</span>
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">Dependencies</span>
            <span class="text-sm font-medium">{auditResult.metrics.technical.dependencies}</span>
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">Bundle Size (CSS)</span>
            <span class="text-sm font-medium">{auditResult.metrics.technical.bundleSizeCSS}KB</span>
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">Build Time</span>
            <span class="text-sm font-medium">{auditResult.metrics.technical.buildTime}s</span>
          </div>
        </div>
      </div>

      <!-- Quality Metrics -->
      <div class="bg-white border border-gray-200 rounded-lg p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Quality</h3>
        <div class="space-y-3">
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">TypeScript Coverage</span>
            <span class="text-sm font-medium">{auditResult.metrics.quality.typescriptCoverage}%</span>
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">ESLint Issues</span>
            <span class="text-sm font-medium">{auditResult.metrics.quality.eslintIssues}</span>
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">Security Vulnerabilities</span>
            <span class="text-sm font-medium">{auditResult.metrics.quality.securityVulnerabilities}</span>
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">Accessibility Score</span>
            <span class="text-sm font-medium">{auditResult.metrics.quality.accessibilityScore}%</span>
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">Performance Score</span>
            <span class="text-sm font-medium">{auditResult.metrics.quality.performanceScore}%</span>
          </div>
        </div>
      </div>

      <!-- Business Metrics -->
      <div class="bg-white border border-gray-200 rounded-lg p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Business</h3>
        <div class="space-y-3">
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">Page Load Time</span>
            <span class="text-sm font-medium">{auditResult.metrics.business.pageLoadTime}s</span>
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">LCP</span>
            <span class="text-sm font-medium">{auditResult.metrics.business.coreWebVitals.lcp}s</span>
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">FID</span>
            <span class="text-sm font-medium">{auditResult.metrics.business.coreWebVitals.fid}ms</span>
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">CLS</span>
            <span class="text-sm font-medium">{auditResult.metrics.business.coreWebVitals.cls}</span>
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-gray-600">SEO Score</span>
            <span class="text-sm font-medium">{auditResult.metrics.business.seoScore}%</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .audit-dashboard {
    font-family: 'IBM Plex Sans', sans-serif;
  }
  
  .audit-dashboard h1,
  .audit-dashboard h2,
  .audit-dashboard h3 {
    font-family: 'Lora', serif;
  }
  
  .audit-dashboard .grid {
    display: grid;
  }
  
  .audit-dashboard .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  
  @media (min-width: 768px) {
    .audit-dashboard .md\\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  
  @media (min-width: 1024px) {
    .audit-dashboard .lg\\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
</style>